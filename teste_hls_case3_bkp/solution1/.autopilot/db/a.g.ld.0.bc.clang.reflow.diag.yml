--- !Failure
Pass:            generate-ir-wrapper
Name:            MAXIDepthUnspecified
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 13, 
                   Column: 0 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - String:          'A depth specification is required for MAXI interface port '''
  - Name:            ext_mem
  - String:          ''' for cosimulation.'
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 25, 
                   Column: 22 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgepseq
  - ArrayName:       ext_mem
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_25_1
  - String:          ' '
  - LoopLoc:         'hls_sources/finn_feeder_chiplet.cpp:25:22'
  - String:          ' '
  - Function:        'finn_feeder_chiplet(hls::stream<hls::axis<ap_uint<40>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, hls::stream<hls::axis<ap_uint<8>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, unsigned char volatile*, ap_int<40> volatile*, unsigned int, unsigned int, unsigned int, bool volatile*)'
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 13, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 34, 
                       Column: 15 }
  - OrigDirection:   read
  - OrigID:          for.inc.load.10
...
--- !Missed
Pass:            reflow-burst-inference
Name:            NonSimpleMemoryAccess
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 41, 
                   Column: 19 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - String:          Volatile or Atomic access cannot be transformed
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 41, 
                       Column: 19 }
  - OrigDirection:   write
  - OrigID:          for.inc8.store.9
  - ArrayName:       done_irq
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        'finn_feeder_chiplet(hls::stream<hls::axis<ap_uint<40>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, hls::stream<hls::axis<ap_uint<8>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, unsigned char volatile*, ap_int<40> volatile*, unsigned int, unsigned int, unsigned int, bool volatile*)'
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 13, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            NonSimpleMemoryAccess
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 28, 
                   Column: 19 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - String:          Volatile or Atomic access cannot be transformed
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 28, 
                       Column: 19 }
  - OrigDirection:   write
  - OrigID:          VITIS_LOOP_32_2.store.4
  - ArrayName:       done_irq
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        'finn_feeder_chiplet(hls::stream<hls::axis<ap_uint<40>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, hls::stream<hls::axis<ap_uint<8>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, unsigned char volatile*, ap_int<40> volatile*, unsigned int, unsigned int, unsigned int, bool volatile*)'
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 13, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            TypeAllocSizePaddingMemoryAccess
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 25, 
                   Column: 22 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - Type:            i40
  - String:          ' allocated space contains padding. This is unsupported'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 25, 
                       Column: 22 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       ext_mem
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        'finn_feeder_chiplet(hls::stream<hls::axis<ap_uint<40>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, hls::stream<hls::axis<ap_uint<8>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, unsigned char volatile*, ap_int<40> volatile*, unsigned int, unsigned int, unsigned int, bool volatile*)'
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 13, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 25, 
                   Column: 22 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '64'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        'finn_feeder_chiplet(hls::stream<hls::axis<ap_uint<40>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, hls::stream<hls::axis<ap_uint<8>, 0ul, 0ul, 0ul, (unsigned char)0, false>, 0>&, unsigned char volatile*, ap_int<40> volatile*, unsigned int, unsigned int, unsigned int, bool volatile*)'
    DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 13, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: hls_sources/finn_feeder_chiplet.cpp, Line: 25, 
                   Column: 22 }
Function:        _Z19finn_feeder_chipletRN3hls6streamINS_4axisI7ap_uintILi40EELm0ELm0ELm0ELh0ELb0EEELi0EEERNS0_INS1_IS2_ILi8EELm0ELm0ELm0ELh0ELb0EEELi0EEEPVhPV6ap_intILi40EEjjjPVb
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '64'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
