<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_data_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_data_ptr" off="0" region="0" recursive="0"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="33" pragmaType="pipeline" parentfunction="finn_feeder_chiplet" off="0" ii="1" rewind="0" style=""/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="14" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="axis" port="out_stream" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="15" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="axis" port="in_stream" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="16" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="s_axilite" port="predicted_index" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="17" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="s_axilite" port="initial_address" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="18" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="s_axilite" port="image_size" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="19" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="s_axilite" port="num_images" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="20" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_sources/finn_feeder_chiplet.cpp" line="21" pragmaType="interface" parentfunction="finn_feeder_chiplet" mode="m_axi" port="ext_mem" bundle="" offset="" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_strb_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_user_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_last_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_id_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_dest_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_strb_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_user_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_last_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_id_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_dest_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_keep_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_keep_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<40>::ap_uint<40>(ap_int<40> const volatile&)" off="0" region="0" recursive="0"/>
</pragmas>
